---
import BaseHead from "../../components/BaseHead.astro";
import Header from "../../components/Header.astro";
import Footer from "../../components/Footer.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../../consts";

import axios from "axios";
import qs from "qs";

let url = import.meta.env.STRAPI_URL + "/api/posts",
  blogDetail;
let ImgURL = import.meta.env.STRAPI_URL;

const query = qs.stringify({
  populate: {
    featured_image: {
      fields: ["name", "width", "height", "url"],
    },
    author: {
      populate: {
        image: {
          fields: ["name", "width", "height", "url"],
        },
      },
    },
    category: {
      populate: true,
    },
  },
});
try {
  await axios.get(url + "?" + query).then((res) => {
    let blogs = res.data.data;
    blogDetail = blogs.map((item) => ({
      ...item,
      featuredImageUrls: item.attributes.featured_image.data.map((image) => ({
        url: ImgURL + image.attributes.url,
        width: image.attributes.width,
        height: image.attributes.height,
      })),
    }));
  });
} catch (error) {
  console.log(error);
  throw Error("Error trying to Capture Data: ", error);
}

// console.log(blogDetail);
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
    <style>
      .image-container {
        width: 300px; /* Set the desired width */
        height: 300px; /* Set the desired height */
        overflow: hidden; /* Ensure that images overflow is hidden */
      }

      .post-image {
        width: 100%; /* Take up full width of container */
        height: 100%; /* Take up full height of container */
        object-fit: cover; /* Cover container while maintaining aspect ratio */
      }
    </style></head
  >

  <body>
    <Header />
    <main class="h-full w-3/4 m-auto flex flex-wrap justify-center py-12">
      <a
        href={`blog/${blogDetail[0].attributes.slug}`}
        class="flex flex-col justify-center items-center text-center m-4 mb-8"
      >
        <div class="image-container">
          {
            blogDetail[0].featuredImageUrls.map((image, imgIndex) => (
              <img src={image.url} class="post-image" />
            ))
          }
        </div>
        <h6 class="title">{blogDetail[0].attributes.title}</h6>
      </a>
      <div class="grid grid-cols-2 gap-12">
        {
          blogDetail.slice(1).map((post, index) => (
            <a
              href={`blog/${post.attributes.slug}`}
              class="flex flex-col justify-center items-center text-center"
            >
              <div class="image-container">
                {post.featuredImageUrls.map((image, imgIndex) => (
                  <img src={image.url} alt="" class="post-image" />
                ))}
              </div>
              <h6 class="title mt-4 mb-2">{post.attributes.title}</h6>
            </a>
          ))
        }
      </div>
    </main>

    <Footer />
  </body>
</html>
